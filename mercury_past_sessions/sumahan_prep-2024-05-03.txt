// nice to have
list octaves [0 1]
list repOct repeat(octaves 16)
list starts [0.2 0.5 0.7] // maybe
list lowFValues shuffle(drunk(4 100 300 700))
list randomFloats shuffle(spreadF(0 1 0.2))
list random10s clave(10)

// intro
new sample bowl_hi name(bowl) time(4) speed(0.2) gain(0.5) fx(lfo 1/16)
new sample choir_02 name(choir) time(1) speed(0.4) gain(0.6) fx(lfo 1/16) shape(2000) fx(filter high 300 0.5)

// rain
new sample rain45sec name(rain)  stretch(24) start(spreadF(24 0 1))

// Melody variations
// epic choir 
new sample choir_02 name(loopX) start(shuffle(spreadF(16 0 1))) shape(50 1200) time(1/2) fx(lfo 1/16) gain(1)


// killer slide
// optional octave
list octBase [0 1]
list oct repeat(octBase 4)
list bassLine repeat([3 2 0 -7] 4)
list bassLine2 repeat([0 7] 4)
new synth saw name(slideTest) note(bassLine 0) shape(2 250) time(1/16) slide(1/8) fx(filter low 1000 0.9)
// filter mod fx(filter low 4/1 1300 600 0.9)


// killer deep techno soundscape
ring detune randomFloat(1000 0.95 1.05)
ring pos sineFloat(1100 1 0 0.5)

new sample bowl_mid name(grain) gain(1)
   set grain time(1/16)
   set grain offset(pos) pan(random)
   set grain fx(delay 2/32 3/32 0.9)
   set grain speed(detune) fx(squash)
   set grain fx(compressor)


// fun choir
new sample choir_01 name(loopX) start(shuffle(spreadF(16 0 1))) shape(10 300) time(1/8) fx(filter high 600 0.5)

// algorithmic melodies

list pisa1 pisano(13)
list random10s clave(10)
new synth saw name(saw1) note(pisa1 0) time(1/16) gain(0.5) shape(20 300) pan(random10s) fx(filter band 1100 0.4) fx(reverb 0.3)
// option to add filter mod  fx(filter low 4/1 1100 400 0.4)

list pisa2 pisano(5)
list euc euclidean(16 10)
list random10s clave(10)
new sample chimes name(chimes1) note(pisa2 0) time(1/16) gain(0.5) shape(20 300) pan(random10s) fx(reverb 0.3) play(euc)

// killer kalimba
list pisa3 pisano(5)
list euc euclidean(16 10)
list random10s clave(10)
new sample kalimba_a name(kalimba1) note(pisa3 0) time(1/16) gain(0.5) shape(300) pan(random10s) fx(reverb 0.3) play(euc) fx(filter low 900 0.9)

list fib1 fibonacci(8)
list random10s clave(10)
new synth sine name(sine1) note(fib1 1) time(1/16) fx(filter) gain(0.8) shape(20 400) pan(random10s)// fx(lfo 1/16) fx(compressor)

list luc1 lucas(3)
list euc euclidean(16 9)
new sample kalimba_g name(kalimba2) note(luc1 -1) time(1/16) gain(0.9) shape(300) pan(random10s) fx(reverb 0.3) play(euc) fx(filter low 900 0.9)

list luc2 lucas(5)
list euc euclidean(16 10)
new sample marimba_b2 name(marimba2) note(luc2 -1) time(1/16) gain(1) shape(300) pan(random10s) fx(reverb 0.3) play(euc) fx(filter low 900 0.6)

list luc3 lucas(5)
list euc euclidean(16 10)
new sample xylo_c4 name(xylo1) note(luc3 -2) time(1/16) gain(1) shape(300) pan(random10s) fx(reverb 0.3) play(euc) fx(filter low 900 0.6)

// harp_c3 ?

// some tunes with modulation and notes
list nts1 [3 2 1 4 2 1]
list nts2 [3 2 5 4 12 1]
list euc euclidean(16 6)
new synth saw note(shuffle(nts2) 1) time(1/16) fx(filter high 1/16 500 3000 0.9 0.3) fx(delay 1/16 1) play(euc)

// chord progressions
list prog1 [I V VI]
list prog2 [II V I]
list prog3 [I V IV VI]
list prog4 [I III V VIIb]
list prog5 [I]
list prog6 [Im Vm7 Im]

list akor chordsFromNumerals(prog5)
list highFDefined [500 600 400 600]
list euc euclidean(16 10)
new polySynth square name(polySquare1) note(akor 2) fx(delay 1/8 0.8) fx(reverb) time(1/4) pan(random) fx(filter high highFDefined 0.5) gain(1) timediv([1 1 4 1]) play(euc)
new polySample pluck_a name(chords1) note(akor 0) fx(delay 1/8 0.8) fx(reverb) time(1/4) pan(random) fx(filter high highFDefined 0.5) gain(1) timediv([1 1 4 1])

list progressions chordsFromNumerals(prog6)
list progressionsOctaves [1 1 1]
list rhythm [1 1 1 0 1 1 1 0]
new polySynth triangle note(progressions progressionsOctaves) play(rhythm) time(1) fx(reverb) fx(delay)  shape(100 300) gain(1) name(tr)

list prog7 [I Vm VI I]
new polySynth saw name(prog7saw) note(prog7 [1 2]) time(1 0) shape(1 3/4 1/4) fx(filter low 1/16 200 6000 0.6 0 0.3) gain(0.5)


//modulation 
new polySynth saw name(modulation) time(1/2) note(akor) shape(off) fx(filter low 1/4 100 4000 0.8)


// filter modulation kotuu
list nts spread(5 0 12)
new synth saw time(1/8) note(nts) shape(off) fx(filter low 1/16 100 4000 0.8)
new synth saw time(1/16) note(nts 1) shape(off) fx(filter low 1/16 200 6000 0.6 0 0.05)

list nts2 spread(4 0 7)
new synth saw time(1/2) note(nts2) shape(off) fx(filter low 1/16 100 4000 0.8)


// minimal melody
new sample drone_cymbal time(2/16) gain(0.8) fx(squash squashes) pan(panning1) fx(lfo 1/16)


// squash
list squashes [4 15 10 4 40]
new sample kick_909 time(1/16) fx(squash squashes) shape(1 50)

// Filter modulation fena degil
list cutoffs [200 400 700 1000]
list qs [0.3 0.3 0.3 0.3 0.8]
new synth saw time(1/16) fx(filter low cutoffs qs) shape(1 80)
// optional play with rhythm

// slide
list bassLine repeat([3 2 0 -7] 4)
new synth saw name(slideTest) note(bassLine 0) shape(2 250) time(1/4) slide(1/8)


// super
new synth saw name(superTest) time(1/16) super(3 0.42) shape(1 80 1)



// LOOPS
// soft melody samples
new sample loop4bar4 name(loopX) stretch(4) start(spreadF(4 0 1)) fx(filter low 800 0.6) 

// melodic melodies
new sample loop2bar2 name(loopX) stretch(2) start(spreadF(2 0 1)) gain(0.4)

list fadeIn [1000 600 800 750 1000]
list fadeOut [10 20 50 20 10]
list pisMelody pisano(8)

new sample pluck_a name(pisMelodyPluck) note(pisMelody) time(1/16) shape(fadeIn fadeOut) gain(1) fx(delay) fx(reverb) 


list prog1 chordsFromNumerals([I Vm VI I])
new polySynth saw name(progs2saw) note(prog1 1) time(1 0) shape(1 3/4 1/4) fx(filter low 1/16 200 6000 0.6 0 0.3) gain(0.5)
new polySynth saw name(progs2saw) note(prog1 [1 2]) time(1 0) shape(1 3/4 1/4) fx(filter low 1/16 200 6000 0.6 0 0.3) gain(0.5)

list prog2octave [1 2 1 2]
new polySynth triangle name(progs2tri) note(prog1 prog2octave) play(rhyt3) time(1/2) shape([fadeIn] [fadeOut]) gain(1)



// rhythm

list dynamics [0.7 0.8 0.7 0.9]
list panning [-0.50 0.50 -0.50 0.50]
list panning1 [-0.25 0 0.25 0 -0.25 0 0.25 0]
list panning2 [-0.50 -0.25 0 0.25 0.50 0.25 0 -0.25 -0.50]
list beat1 [0 1 0 1 0 1 1 0 1] 
list hatbeat [1 0 1 0 0 1 0 1]
list hatbeat1 [0 1 0 1 0 0 1 1]
list squashes [1 3 2 4]
list nts spread(4 0 12)
list nts1 [12 13 11 12]

new sample clap_808 time(1/16) gain(0.35) fx(reverb 0.4 10) pan(panning) fx(delay 5/16) play(0.6) fx(squash squashes)

new sample kick_808 name(kick_deep_1) time(1/4) gain(1) fx(squash squashes) fx(delay 1/16) fx(compressor) 
new sample hat_909 name(hat808_1) time(1/8) gain(1) fx(reverb 0.4) pan(panning1) fx(delay 1/16) play(hatbeat1)
new sample tom1 name(tomSamp1) time(1/8) gain(1) note(nts 0) fx(reverb 0.1) pan(panning)
new sample tom1 name(tomSamp2) time(5/16) gain(0.6) note(nts -1)  fx(reverb 0.4) pan(panning1) play(0.3)
new sample tabla_mid name(tablaMid) time(5/8) pitch(-1) shape(off) pan(random) fx(compressor) fx(filter low 1/1 100 800 0.6) gain(0.8) play(beat1)
new sample snare1 name(sadfasdf) time(2/8 1/8) gain(0.6) pan(panning1) pitch(0) play(beat1)
new sample maracas_808 name(asdf) time(1/16) gain(dynamics) fx(reverb 0.4) pan(panning2)
new sample shaker1 name(shaker) time(1/16) gain(dynamics) fx(reverb 0.4) pan(panning2)



list octBase [-1 0]
list oct repeat(octBase 8)
list nts [1 2 1 3 0] 
list dynamics [0.7 0.8 0.7 0.9]
new sample clave_808  name(clv2) time(2/8 1/8) fx(reverb 0.4) fx(delay 1/16) note(shuffle(nts1) oct) fx(filter high 1/1 500 1400 0.5 0.03) fx(delay 1/16) gain(dynamics)